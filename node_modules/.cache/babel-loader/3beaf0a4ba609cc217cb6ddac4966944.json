{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\anujk\\\\Desktop\\\\Drawer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './styles/main.scss';\nimport DrawableCanvas from './deps/drawingCanvas';\nimport Colors from './elems/colors';\n\nconst axios = require('axios');\n\nconst App = props => {\n  _s();\n\n  var DrawCanvas, canvasDataURL;\n  useEffect(() => {\n    DrawCanvas = new DrawableCanvas(); // window.addEventListener('resize', DrawCanvas.reSize)\n  });\n\n  const downloadClickHandler = () => {\n    var canvasDataURL = DrawCanvas.canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n    const canvasFile = dataURLtoFile(canvasDataURL, \"drawnImage\");\n    const data = new FormData();\n    data.append('photos', canvasFile);\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    axios.post('http://localhost:3030/', data, config).then(response => {\n      console.log(response.data);\n    });\n  };\n\n  const dataURLtoFile = (dataurl, filename) => {\n    const arr = dataurl.split(',');\n    const mime = arr[0].match(/:(.*?);/)[1];\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n\n    while (n) {\n      u8arr[n - 1] = bstr.charCodeAt(n - 1);\n      n -= 1; // to make eslint happy\n    }\n\n    return new File([u8arr], filename, {\n      type: mime\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Drawer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"by Anuj Kapasia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drawer-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Colors, {\n        colorChangeHandler: clr => DrawCanvas.color(clr)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"drawing-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadClickHandler,\n          children: \"Save as PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/anujk/Desktop/Drawer/src/App.js"],"names":["React","useState","useEffect","DrawableCanvas","Colors","axios","require","App","props","DrawCanvas","canvasDataURL","downloadClickHandler","canvas","toDataURL","replace","canvasFile","dataURLtoFile","data","FormData","append","config","headers","post","then","response","console","log","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","clr","color"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport './styles/main.scss'\r\nimport DrawableCanvas from './deps/drawingCanvas'\r\nimport Colors from './elems/colors'\r\n\r\nconst axios = require('axios')\r\n\r\nconst App=(props)=> {\r\n    var DrawCanvas,canvasDataURL;\r\n\r\n    useEffect(()=>{\r\n        DrawCanvas = new DrawableCanvas()\r\n        // window.addEventListener('resize', DrawCanvas.reSize)\r\n    })\r\n\r\n\r\n    const downloadClickHandler = () => {\r\n        var canvasDataURL = DrawCanvas.canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\r\n        const canvasFile = dataURLtoFile(canvasDataURL,\"drawnImage\")\r\n\r\n        const data = new FormData()\r\n        data.append('photos', canvasFile)\r\n        const config = {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        }\r\n\r\n        axios.post('http://localhost:3030/', data, config).then(response => {\r\n            console.log(response.data)\r\n        })\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    const dataURLtoFile = (dataurl, filename) => {\r\n        const arr = dataurl.split(',')\r\n        const mime = arr[0].match(/:(.*?);/)[1]\r\n        const bstr = atob(arr[1])\r\n        let n = bstr.length\r\n        const u8arr = new Uint8Array(n)\r\n        while (n) {\r\n        u8arr[n - 1] = bstr.charCodeAt(n - 1)\r\n        n -= 1 // to make eslint happy\r\n        }\r\n        return new File([u8arr], filename, { type: mime })\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-container\" >\r\n            <header className=\"app-header\" >\r\n                <h1>Drawer</h1>\r\n                <h5>by Anuj Kapasia</h5>\r\n            </header>\r\n            <div className=\"drawer-wrapper\" >\r\n                <Colors colorChangeHandler={(clr)=>DrawCanvas.color(clr)} />\r\n                <div className=\"canvas-container\" >\r\n                    <canvas id=\"drawing-canvas\"  />\r\n                </div>\r\n                <div className=\"app-footer\" >\r\n                    <button onClick={downloadClickHandler} >Save as PDF</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}