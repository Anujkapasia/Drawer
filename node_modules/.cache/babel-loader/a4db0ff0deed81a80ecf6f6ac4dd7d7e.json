{"ast":null,"code":"export default class DrawableCanvas {\n  constructor() {\n    this.canvas = document.getElementById('drawing-canvas');\n    this.ctx = canvas.getContext(\"2d\");\n    this.w = canvas.width;\n    this.h = canvas.height;\n    this.flag = false;\n    this.prevX = 0;\n    this.currX = 0;\n    this.prevY = 0;\n    this.currY = 0;\n    this.dot_flag = false;\n    this.x = \"black\";\n    this.y = 2;\n    canvas = document.getElementById('drawing-canvas');\n    ctx = canvas.getContext(\"2d\");\n    w = canvas.width;\n    h = canvas.height;\n    flag = false;\n    prevX = 0;\n    currX = 0;\n    prevY = 0;\n    currY = 0;\n    dot_flag = false;\n    x = \"black\";\n    y = 2;\n    this.canvas.addEventListener(\"mousemove\", function (e) {\n      this.findxy('move', e);\n    }, false);\n    this.canvas.addEventListener(\"mousedown\", function (e) {\n      this.findxy('down', e);\n    }, false);\n    this.canvas.addEventListener(\"mouseup\", function (e) {\n      this.findxy('up', e);\n    }, false);\n    this.canvas.addEventListener(\"mouseout\", function (e) {\n      this.findxy('out', e);\n    }, false);\n    this.reSize();\n  }\n\n  reSize() {\n    this.canvas.width = this.canvas.offsetWidth;\n    this.canvas.height = this.canvas.offsetHeight;\n  }\n\n  findxy(res, e) {\n    if (res == 'down') {\n      this.prevX = this.currX;\n      this.prevY = this.currY;\n      this.currX = e.clientX - this.canvas.offsetLeft;\n      this.currY = e.clientY - this.canvas.offsetTop;\n      this.flag = true;\n      this.dot_flag = true;\n\n      if (this.dot_flag) {\n        ctx.beginPath();\n        ctx.fillStyle = this.x;\n        ctx.fillRect(this.currX, this.currY, 2, 2);\n        ctx.closePath();\n        this.dot_flag = false;\n      }\n    }\n\n    if (res == 'up' || res == \"out\") {\n      this.flag = false;\n    }\n\n    if (res == 'move') {\n      if (this.flag) {\n        this.prevX = this.currX;\n        this.prevY = this.currY;\n        this.currX = e.clientX - this.canvas.offsetLeft;\n        this.currY = e.clientY - this.canvas.offsetTop;\n        this.draw();\n      }\n    }\n  }\n\n  draw() {\n    ctx.beginPath();\n    ctx.moveTo(this.prevX, this.prevY);\n    ctx.lineTo(this.currX, this.currY);\n    ctx.strokeStyle = this.x;\n    ctx.lineWidth = this.y;\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  erase() {\n    ctx.clearRect(0, 0, this.w, this.h);\n    document.getElementById(\"canvasimg\").style.display = \"none\";\n  }\n\n  save() {\n    document.getElementById(\"canvasimg\").style.border = \"2px solid\";\n    var dataURL = canvas.toDataURL();\n    document.getElementById(\"canvasimg\").src = dataURL;\n    document.getElementById(\"canvasimg\").style.display = \"inline\";\n  }\n\n  color(obj) {\n    switch (obj.id) {\n      case \"green\":\n        this.x = \"green\";\n        break;\n\n      case \"blue\":\n        this.x = \"blue\";\n        break;\n\n      case \"red\":\n        this.x = \"red\";\n        break;\n\n      case \"yellow\":\n        this.x = \"yellow\";\n        break;\n\n      case \"orange\":\n        this.x = \"orange\";\n        break;\n\n      case \"black\":\n        this.x = \"black\";\n        break;\n\n      case \"white\":\n        this.x = \"white\";\n        break;\n    }\n\n    if (this.x == \"white\") this.y = 14;else this.y = 2;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/anujk/Desktop/Drawer/src/deps/drawingCanvas.js"],"names":["DrawableCanvas","constructor","canvas","document","getElementById","ctx","getContext","w","width","h","height","flag","prevX","currX","prevY","currY","dot_flag","x","y","addEventListener","e","findxy","reSize","offsetWidth","offsetHeight","res","clientX","offsetLeft","clientY","offsetTop","beginPath","fillStyle","fillRect","closePath","draw","moveTo","lineTo","strokeStyle","lineWidth","stroke","erase","clearRect","style","display","save","border","dataURL","toDataURL","src","color","obj","id"],"mappings":"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","sourcesContent":["\r\n\r\nexport default class DrawableCanvas {\r\n\r\n    canvas = document.getElementById('drawing-canvas');\r\n    ctx = canvas.getContext(\"2d\");\r\n    w = canvas.width;\r\n    h = canvas.height;\r\n    flag = false;\r\n    prevX = 0;\r\n    currX = 0;\r\n    prevY = 0;\r\n    currY = 0;\r\n    dot_flag = false;\r\n    x = \"black\"; \r\n    y = 2;\r\n\r\n    constructor(){\r\n        canvas = document.getElementById('drawing-canvas');\r\n        ctx = canvas.getContext(\"2d\");\r\n        w = canvas.width;\r\n        h = canvas.height;\r\n        flag = false;\r\n        prevX = 0;\r\n        currX = 0;\r\n        prevY = 0;\r\n        currY = 0;\r\n        dot_flag = false;\r\n        x = \"black\"; \r\n        y = 2;\r\n\r\n\r\n\r\n        this.canvas.addEventListener(\"mousemove\", function (e) {\r\n            this.findxy('move', e)\r\n        }, false);\r\n        this.canvas.addEventListener(\"mousedown\", function (e) {\r\n            this.findxy('down', e)\r\n        }, false);\r\n        this.canvas.addEventListener(\"mouseup\", function (e) {\r\n            this.findxy('up', e)\r\n        }, false);\r\n        this.canvas.addEventListener(\"mouseout\", function (e) {\r\n            this.findxy('out', e)\r\n        }, false);\r\n\r\n        this.reSize();\r\n    }\r\n\r\n    reSize(){\r\n        this.canvas.width  = this.canvas.offsetWidth;\r\n        this.canvas.height = this.canvas.offsetHeight;\r\n    }\r\n\r\n    findxy(res, e) {\r\n        if (res == 'down') {\r\n            this.prevX = this.currX;\r\n            this.prevY = this.currY;\r\n            this.currX = e.clientX - this.canvas.offsetLeft;\r\n            this.currY = e.clientY - this.canvas.offsetTop;\r\n    \r\n            this.flag = true;\r\n            this.dot_flag = true;\r\n            if (this.dot_flag) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = this.x;\r\n                ctx.fillRect(this.currX, this.currY, 2, 2);\r\n                ctx.closePath();\r\n                this.dot_flag = false;\r\n            }\r\n        }\r\n        if (res == 'up' || res == \"out\") {\r\n            this.flag = false;\r\n        }\r\n        if (res == 'move') {\r\n            if (this.flag) {\r\n                this.prevX = this.currX;\r\n                this.prevY = this.currY;\r\n                this.currX = e.clientX - this.canvas.offsetLeft;\r\n                this.currY = e.clientY - this.canvas.offsetTop;\r\n                this.draw();\r\n            }\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.prevX, this.prevY);\r\n        ctx.lineTo(this.currX, this.currY);\r\n        ctx.strokeStyle = this.x;\r\n        ctx.lineWidth = this.y;\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    erase() {\r\n        ctx.clearRect(0, 0, this.w, this.h);\r\n        document.getElementById(\"canvasimg\").style.display = \"none\";\r\n        \r\n    }\r\n\r\n    save() {\r\n        document.getElementById(\"canvasimg\").style.border = \"2px solid\";\r\n        var dataURL = canvas.toDataURL();\r\n        document.getElementById(\"canvasimg\").src = dataURL;\r\n        document.getElementById(\"canvasimg\").style.display = \"inline\";\r\n    }\r\n\r\n    color(obj) {\r\n        switch (obj.id) {\r\n            case \"green\":\r\n                this.x = \"green\";\r\n                break;\r\n            case \"blue\":\r\n                this.x = \"blue\";\r\n                break;\r\n            case \"red\":\r\n                this.x = \"red\";\r\n                break;\r\n            case \"yellow\":\r\n                this.x = \"yellow\";\r\n                break;\r\n            case \"orange\":\r\n                this.x = \"orange\";\r\n                break;\r\n            case \"black\":\r\n                this.x = \"black\";\r\n                break;\r\n            case \"white\":\r\n                this.x = \"white\";\r\n                break;\r\n        }\r\n        if (this.x == \"white\") this.y = 14;\r\n        else this.y = 2;\r\n    \r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}