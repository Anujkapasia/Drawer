{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import'./styles/main.scss';import DrawableCanvas from'./deps/drawingCanvas';import Colors from'./elems/colors';var axios=require('axios');var App=function App(props){var DrawCanvas,canvasDataURL;useEffect(function(){DrawCanvas=new DrawableCanvas();// window.addEventListener('resize', DrawCanvas.reSize)\n});var downloadClickHandler=function downloadClickHandler(){var canvasDataURL=DrawCanvas.canvas.toDataURL(\"image/png\").replace(\"image/png\",\"image/octet-stream\");var canvasFile=dataURLtoFile(canvasDataURL,\"drawnImage\");var data=new FormData();data.append('photo',canvasFile,canvasFile.name);var config={headers:{'Content-Type':'multipart/form-data'}};axios.post('https://drawerapi.herokuapp.com/change',data,config).then(function(response){window.open(response,'_blank');}).catch(function(err){console.log(err);});};var dataURLtoFile=function dataURLtoFile(dataurl,filename){var arr=dataurl.split(',');var mime=arr[0].match(/:(.*?);/)[1];var bstr=atob(arr[1]);var n=bstr.length;var u8arr=new Uint8Array(n);while(n){u8arr[n-1]=bstr.charCodeAt(n-1);n-=1;// to make eslint happy\n}return new File([u8arr],filename,{type:mime});};return/*#__PURE__*/_jsxs(\"div\",{className:\"main-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Drawer\"}),/*#__PURE__*/_jsx(\"h5\",{children:\"by Anuj Kapasia\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"drawer-wrapper\",children:[/*#__PURE__*/_jsx(Colors,{colorChangeHandler:function colorChangeHandler(clr){return DrawCanvas.color(clr);}}),/*#__PURE__*/_jsx(\"div\",{className:\"canvas-container\",children:/*#__PURE__*/_jsx(\"canvas\",{id:\"drawing-canvas\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"app-footer\",children:/*#__PURE__*/_jsx(\"button\",{onClick:downloadClickHandler,children:\"Save as PDF\"})})]})]});};export default App;","map":{"version":3,"sources":["C:/Users/anujk/Desktop/Drawer/src/App.js"],"names":["React","useState","useEffect","DrawableCanvas","Colors","axios","require","App","props","DrawCanvas","canvasDataURL","downloadClickHandler","canvas","toDataURL","replace","canvasFile","dataURLtoFile","data","FormData","append","name","config","headers","post","then","response","window","open","catch","err","console","log","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","clr","color"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport './styles/main.scss'\r\nimport DrawableCanvas from './deps/drawingCanvas'\r\nimport Colors from './elems/colors'\r\n\r\nconst axios = require('axios')\r\n\r\nconst App=(props)=> {\r\n    var DrawCanvas,canvasDataURL;\r\n\r\n    useEffect(()=>{\r\n        DrawCanvas = new DrawableCanvas()\r\n        // window.addEventListener('resize', DrawCanvas.reSize)\r\n    })\r\n\r\n\r\n    const downloadClickHandler = () => {\r\n        var canvasDataURL = DrawCanvas.canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\r\n        const canvasFile = dataURLtoFile(canvasDataURL,\"drawnImage\")\r\n\r\n        const data = new FormData()\r\n        data.append('photo', canvasFile, canvasFile.name)\r\n        const config = {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        }\r\n\r\n        axios.post('https://drawerapi.herokuapp.com/change', data, config).then(response => {\r\n            window.open(response, '_blank');\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    const dataURLtoFile = (dataurl, filename) => {\r\n        const arr = dataurl.split(',')\r\n        const mime = arr[0].match(/:(.*?);/)[1]\r\n        const bstr = atob(arr[1])\r\n        let n = bstr.length\r\n        const u8arr = new Uint8Array(n)\r\n        while (n) {\r\n        u8arr[n - 1] = bstr.charCodeAt(n - 1)\r\n        n -= 1 // to make eslint happy\r\n        }\r\n        return new File([u8arr], filename, { type: mime })\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-container\" >\r\n            <header className=\"app-header\" >\r\n                <h1>Drawer</h1>\r\n                <h5>by Anuj Kapasia</h5>\r\n            </header>\r\n            <div className=\"drawer-wrapper\" >\r\n                <Colors colorChangeHandler={(clr)=>DrawCanvas.color(clr)} />\r\n                <div className=\"canvas-container\" >\r\n                    <canvas id=\"drawing-canvas\"  />\r\n                </div>\r\n                <div className=\"app-footer\" >\r\n                    <button onClick={downloadClickHandler} >Save as PDF</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}